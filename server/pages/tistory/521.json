{"pageProps":{"post":{"id":"521","date":"2018. 1. 24. 15:27","title":"Mocha 사용","content":"<p>티스토리에서는 다음에디터를 사용하고 있는데 다음에디터는 관리팀이 해체되어 이제 동작하도록 유지만 되고 있는 상태다. <a href=\"https://github.com/kakao/DaumEditor\">github</a>에는 DEPRECATED라고 까지 써두었다. 여튼 이 에디터를 사용하는 이상 스스로 관리를 해나가야 한다. 그래서 오늘은 <a href=\"https://mochajs.org/\">mocha</a>를 붙여서 테스트를 해보기로 했다.</p>\n<p>먼저 mocha를 설치해야한다. global로는 가능하면 설치 안하고 싶어서 먼저 npm을 세팅했다. 다음에디터는 build를 <a href=\"https://ant.apache.org\">ant</a>를 통해서 하고 있어서 이걸 모두 node로 바꾸고 싶은 마음도 있지만 지금은 test만 만들기로 했다. 첨엔 단순히 <code>npm test</code>로 실행을 하려고 했는데 mocha 설명을 보니 다양한 에디터 플러그인으로도 제공하고 있다. vscode용으로는 <a href=\"https://marketplace.visualstudio.com/items?itemName=maty.vscode-mocha-sidebar\">Mocha sidebar</a>라는 것을 추천하고 있어서 그걸 설치했다.</p>\n<p style=\"text-align: center;\"><img src=\"https://t1.daumcdn.net/cfile/tistory/99289A405A68262533\" ></p>\n<p>설정이 완료되면 이렇게 개별로 실행가능한 버튼을 만들어주고 결과도 옆에 표시해준다. 이전에 사용해봤던 jest 플러그인은 자동으로 실행하는 방식으라 좀 맘에 안들었는데 이건 맘에 든다. 마치 intellij에서 테스트하는 느낌이 난다. 만든 사람도 그런 걸 생각하면서 만들지 않았을까 추측해본다.</p>\n<hr>\n<p>여기까지 하고 테스트를 해보니 브라우저와 node의 동작 차이가 있어서 에러가 나야할 상황에서 에러가 안난다. ;;; 시간을 투자한 것에 비해서 좀 아쉽지만 코드 수정할 때 검증하는 용도로는 사용할 수 있을 것 같다.</p>            ","summary":"티스토리에서는 다음에디터를 사용하고 있는데 다음에디터는 관리팀이 해체되어 이제 동작하도록 유지만 되고 있는 상태다. github에는 DEPRECATED라고 까지 써두었다. 여튼 이 에디터를 사용하는 이상 스스로 관리를 해나가야 한다. 그래서 오늘은 mocha를 붙여서 테스트를 해보기로 했다.\n먼저 mocha를 설치해야한다. global로는 가능하면 설치 안하고 싶어서 먼저 npm을 세팅했다. 다음에디터는 build를 ant를 통해서 하고 있어서 이걸 모","image":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F99289A405A68262533"}},"__N_SSG":true}